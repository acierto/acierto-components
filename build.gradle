apply plugin: 'groovy'
apply plugin: 'java'

configurations {
    jruby
}

ext.gebVersion = "0.9.0-RC-3"
ext.seleniumVersion = "2.30.0"
ext.springVersion = '3.1.1.RELEASE'
ext.camelVersion = '2.10.3'
ext.aciertoTeamComponentsVersion = '1.0.0'
ext.apacheDsVersion = '1.5.5'
ext.jstlVersion = '1.2'
ext.slf4jVersion = '1.6.1'
ext.cglibVersion = '2.2.2'
ext.powerMockVersion = '1.4.12'
ext.mysqlVersion = '5.1.23'
ext.asmVersion = '3.2'
ext.jsfVersion = '2.1.13'
ext.primefacesVersion = '3.5'
ext.primefacesExtensionsVersion = '0.6.3'
ext.poiVersion = '3.7'
ext.easyMockVersion = '3.0'
ext.springFacesVersion = '0.0.1-SNAPSHOT'
ext.httpcomponentsVersion = '4.2.2'
ext.gemsDir = file('.jruby/gems')

ext.drivers = ["firefox", "chrome"]

ext.cssDir = file('fastappoint-frontend/src/main/webapp/resources/css')
ext.sassDir = file('fastappoint-frontend/src/main/webapp/resources/sass')
ext.imagesDir = file('fastappoint-frontend/src/main/webapp/resources/images')
ext.javascriptsDir = file('fastappoint-frontend/src/main/webapp/resources/js')

ext.powerMockDependencies = [
        "org.powermock:powermock-core:$powerMockVersion",
        "org.powermock:powermock-api-support:$powerMockVersion",
        "org.powermock:powermock-module-junit4-common:$powerMockVersion",
        "org.powermock:powermock-module-junit4:$powerMockVersion",
        "org.powermock:powermock-api-mockito:$powerMockVersion",
        "org.powermock:powermock-reflect:$powerMockVersion"
]

dependencies {
    jruby 'org.jruby:jruby-complete:1.7.3'
	
	 // If using Spock, need to depend on geb-spock
    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
	
	// If using JUnit, need to depend on geb-junit (3 or 4)
    testCompile "org.gebish:geb-junit4:$gebVersion"	
}

//processResources.inputs.files compileSass
//clean.dependsOn cleanCompileSass

buildscript {

    def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

    repositories {
        mavenLocal()
        mavenCentral()
        mavenRepo url: localMavenRepo
    }

    dependencies {
        classpath 'com.eriwen:gradle-css-plugin:1.2.1'
    }

    apply from: file('gradle/buildscript.gradle'), to: buildscript
}

allprojects {
    def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

    repositories {
        mavenCentral()
        mavenRepo url: localMavenRepo
    }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
//apply from: file('gradle/check.gradle')
//apply from: file('gradle/license.gradle')
//apply from: file('gradle/release.gradle')

task watchSass {

    println "CSS Directory: $cssDir"
    println "Sass Directory: $sassDir"
    println "Images Directory: $imagesDir"
    println "Javascript Directory: $javascriptsDir"
    println "Gems Directory: $gemsDir"

    doFirst {

        cssDir.mkdirs()

        Thread.start {
            project.javaexec {
                classpath = configurations.jruby
                main = 'org.jruby.Main'
                args "-X-C -S compass watch --sass-dir $sassDir --css-dir $cssDir --images-dir $imagesDir --javascripts-dir $javascriptsDir --relative-assets".tokenize()
                environment 'GEM_PATH', gemsDir
                environment 'PATH', "$gemsDir/bin"
            }
        }
    }
}

task installGems(type: JavaExec) {
    outputs.dir gemsDir

    classpath = configurations.jruby
    main = "org.jruby.Main"
    args "-S gem install -i $gemsDir --no-rdoc --no-ri compass".tokenize()

    doFirst {
        gemsDir.mkdirs()
    }
}

task compileSass(type: JavaExec) {
    outputs.dir cssDir
    inputs.files installGems
    inputs.dir sassDir
    inputs.dir imagesDir
    inputs.dir javascriptsDir

    classpath = configurations.jruby
    main = "org.jruby.Main"
    args "-S compass compile --sass-dir $sassDir --css-dir $cssDir --images-dir $imagesDir --javascripts-dir $javascriptsDir --relative-assets".tokenize()
    environment 'GEM_PATH', "$gemsDir"
    environment 'PATH', "$gemsDir/bin"

    doFirst {
        cssDir.mkdirs()
    }
}

subprojects {
    group = "com.aciertoteam"

    dependencies {
        compile 'com.github.leleuj.springframework.security:spring-security-oauth-client:1.1.0',
                'commons-codec:commons-codec:1.4',
                'org.scribe:scribe:1.3.2',
                'javax.servlet:servlet-api:2.5',
                "org.apache.httpcomponents:httpclient:$httpcomponentsVersion",
                "org.apache.httpcomponents:httpcore:$httpcomponentsVersion",
                "org.kohsuke:geoip:1.2.8",
                "org.apache.camel:camel-core:$camelVersion",
                "org.apache.camel:camel-mail:$camelVersion",
                "org.apache.camel:camel-spring:$camelVersion",
                "com.lowagie:itext:2.1.7",
                "net.sf.json-lib:json-lib:2.2.1:jdk15",
                "org.springframework.springfaces:springfaces-mvc:$springFacesVersion",
                "com.sun.el:el-ri:1.0",
                "org.primefaces:primefaces:$primefacesVersion",
                "org.primefaces.extensions:primefaces-extensions:$primefacesExtensionsVersion",
                "org.primefaces.themes:sunny:1.0.8",
                "javax.inject:javax.inject:1",
                "com.sun.faces:jsf-api:$jsfVersion",
                "com.sun.faces:jsf-impl:$jsfVersion",
                "javax.validation:validation-api:1.0.0.GA",
                "joda-time:joda-time:1.6.2",
                "org.glassfish.web:el-impl:2.2",
                "javax.el:el-api:2.2",
                "org.apache.commons:commons-lang3:3.1",
                "log4j:log4j:1.2.14",
                "org.apache.poi:poi-scratchpad:$poiVersion",
                "org.apache.poi:poi:$poiVersion",
                "org.quartz-scheduler:quartz:1.8.2",
                "org.springframework.security:spring-security-taglibs:$springVersion",
                "org.springframework.security:spring-security-config:$springVersion",
                "org.springframework.security:spring-security-acl:$springVersion",
                "org.springframework.security:spring-security-core:$springVersion",
                "org.springframework.security:spring-security-web:$springVersion",
                "org.springframework:spring-web:$springVersion",
                "org.springframework:spring-webmvc:$springVersion",
                "org.codehaus.jackson:jackson-mapper-asl:1.5.3",
                "org.springframework:spring-tx:$springVersion",
                "org.springframework:spring-jdbc:$springVersion",
                "org.springframework:spring-context:$springVersion",
                "org.springframework:spring-context-support:$springVersion",
                "org.springframework:spring-core:$springVersion",
                "mysql:mysql-connector-java:$mysqlVersion",
                "net.sf.jsr107cache:jsr107cache:1.1",
                "net.sf.ehcache:ehcache-core:2.3.1",
                "activesoap:jaxp-api:1.3",
                "commons-io:commons-io:1.4",
                "javax.transaction:jta:1.1",
                "org.hibernate:hibernate-core:3.6.6.Final",
                "org.hibernate:hibernate-entitymanager:3.6.6.Final",
                "org.hibernate:hibernate-validator:4.1.0.Final",
                "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final",
                "commons-collections:commons-collections:3.1",
                "org.hibernate:hibernate-commons-annotations:3.2.0.Final",
                "javax.xml.bind:jaxb-api:2.2",
                "cglib:cglib:$cglibVersion",
                "jfree:jfreechart:1.0.9",
                "asm:asm-all:$asmVersion",
                "commons-fileupload:commons-fileupload:1.2",
                "commons-beanutils:commons-beanutils:1.8.3",
                "net.sf.dozer:dozer:5.3.1",
                "org.apache.xmlbeans:xmlbeans:2.4.0",
                "com.servlets:cos:09May2002",
                "javax.mail:mail:1.4",
                "javax.servlet.jsp:jsp-api:2.1",
                "org.slf4j:slf4j-api:$slf4jVersion",
                "org.slf4j:slf4j-jdk14:$slf4jVersion",
                "org.freemarker:freemarker:2.3.14",
                "net.sf.opencsv:opencsv:2.3",
                "javax.servlet:jstl:$jstlVersion",
                "taglibs:standard:1.1.2",
                "commons-dbcp:commons-dbcp:1.1.2",
                "net.sf.flexjson:flexjson:2.0",
                "commons-digester:commons-digester:2.1",
                "org.codehaus.groovy:groovy-all:1.7.0"

        compile("org.springframework:spring-expression:$springVersion") {
            exclude(group: 'org.springframework', module: 'spring')
        }

        compile("org.springframework:spring-beans:$springVersion") {
            exclude(group: 'org.springframework', module: 'spring')
        }

        compile("org.springframework:spring-orm:$springVersion") {
            exclude(group: 'org.springframework', module: 'spring')
        }

        compile("com.octo.captcha:jcaptcha-all:1.0-RC4") {
            exclude(group: 'org.springframework', module: 'spring')
        }

        testCompile "org.seleniumhq.selenium:selenium-java:$seleniumVersion",
                "org.dbunit:dbunit:2.4.8",
                "junit:junit:4.7",
                "org.mockito:mockito-all:1.8.4",
                "org.jmock:jmock-junit4:2.5.1",
                "org.jmock:jmock-junit4:2.5.1",
                "org.codehaus.mojo:dbunit-maven-plugin:1.0-beta-3",
                "com.h2database:h2:1.3.168",
                "org.apache.camel:camel-http:$camelVersion",
                "org.jodd:jodd:3.1.1",
                "org.jvnet.mock-javamail:mock-javamail:1.9"

        testCompile("org.jencks:jencks:2.1") {
            exclude(group: 'org.springframework', module: 'spring-jms')
            exclude(group: 'org.springframework', module: 'spring-aop')
        }

        testCompile("org.springframework:spring-test:$springVersion") {
            exclude(group: 'org.springframework', module: 'spring-aop')
        }
    }
}

project(':aciertoteam-generator') {
    apply plugin: 'java'
    dependencies {
        compile project(':aciertoteam-io')
    }
}

project(':aciertoteam-mail') {
    apply plugin: 'java'
    dependencies {
        compile project(':aciertoteam-common')
    }
}